a <- available.packages()
a <- available.packages()
a
name(rowname(a), 3)
head(rowname(a), 3)
head(rownames(a), 3)
find.package("devtools")
search()
getwd()
version
version()
Version()
version
R.version.string
install.packages("swirl")
install.packages("swirl")
locate curl-config
locate curl-config
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
zz <- c(z, 555, z)
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
swirl()
libary(swirl)
library(swirl)
swirl()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
exit
bye
exit()
libray("swirl")
library("swirl")
swirl()
1==2
1
1==
1
TRUE==TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 !=8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints >5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date(0)
Sys.Date()
mean(c(2, 4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x(1)}, c(8, 4,0))
evaluate(function(x){x[1]}, c(8, 4,0))
evaluate(function(x){x[length(x)]}, c(8, 4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
telegram("I love lucy")
submit()
submit
submit()
submit()
submit()
mad_libs(c(place="Home", adjective="fat", noun="baseball"))
submit()
'I' %p% 'love' %p% 'R'
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2()
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
striptime(t3, "%B %d, %Y %H:%M")
strptime(t3, "%B %d, %Y %H:%M")
t4 <-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
t1
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
info(cars)
info()
cars
help(cars)
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(dist = cars$speed, Speed = cars$dist)
plot(x = cars$speed, y = cars$dist, xlabel=dist, ylabel=Speed)
plot(x = cars$speed, y = cars$dist, xlabel=dist, ylabel=speed)
?plot
plot(x = cars$speed, y = cars$dist, xlab=dist, ylab=speed)
plot(x = cars$speed, y = cars$dist, xlab="dist", ylab="speed")
plot(x = cars$dist, y=cars$speed)
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="speed")
plot(x = cars$speed, y = cars$dist, xlab="Speed")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance", title="My Plot")
plot(cars, main = "My Plot")
?plot
plot(cars, sub = "My Plot Subtitle")
?plot
plot(cars, col=2)
plot(cars, xlim=c(10, 15))
?points
plot(cars)
plot(cars, pch=2)
mtcars
data(mtcars)
?boxplot
boxplot(data=mtcars,formula =mpg~cyl )
boxplot(x=mtcars,formula =mpg~cyl )
boxplot(formula =mpg~cyl,data=mtcars )
hist(mtcars$mpg)
library(swirl)
swirl()
mydf
mydf <- read.csv(path2csv)
mydf <- read.csv(path2csv, stringAsFactors)
mydf <- read.csv(path2csv, stringAsFactors=FALSE)
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, X:size)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter)cran, r_version == "3.1.1", country == "US")
filter(cran, r_version == "3.1.1", country == "US")
"?Comparison"
"?Comparison
""
")
?Comparison
filter(cran, r_version <= "3.0.2", country == "US")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version) == TRUE)
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version))
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
getwd()
setwd("/home/pete/DataScience/ExploratoryAnalysis/CourseProject1/ExData_Plotting1")
?read.table
myData <- read.table(file="data/household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors = FALSE)
head(myData)
summary(myData)
myData$Date <- as.Date(myData$Date, "%m/%d/%y")
summary(myData)
myPlotData <- myData[myData$Date >= '2/1/2007' && myData$Date <='2/1/2007',]
myPlotData <- myData[myData$Date >= '2/1/2007' & myData$Date <='2/2/2007',]
summary(myPlotData)
head(myPlotData)
myPlotData <- subset(myData, Date >= '2007-02-01' &
Date < '2007-02-03')
myPlotData <- subset(myData, Date >= '2007-02-01' &
'2007-02-03')
myPlotData <- subset(myData, Date >= as.Date('2007-02-01') &
Date < as.Date('2007-02-03'))
myPlotData <- myData[myData$Date >= as.Date('2007-02-01') & myData$Date < as.Date('2007-02-03'),]
head(myPlotData)
myPlotData <- myData[myData$Date >= as.Date('2007-02-01'),]
head(myPlotData)
sum(is.na(myData$Date))
myData <- myData[complete.cases(myData),]
myPlotData <- subset(myData, Date >= as.Date('2007-02-01') &
Date < as.Date('2007-02-03'))
myPlotData <- myData[myData$Date >= as.Date('2007-02-01'),]
head(myPlotData)
myPlotData <- myData[myData$Date >= as.Date('2007-02-01') & myData$Date < as.Date('2007-02-03'),]
myPlotData <- myData[myData$Date = as.Date('2007-02-01') | myData$Date = as.Date('2007-02-02'),]
myPlotData <- myData[myData$Date == as.Date('2007-02-01') | myData$Date == as.Date('2007-02-02'),]
myData <- read.table(file="data/household_power_consumption.txt", header=TRUE, sep=";", stringsAsFactors = FALSE)
head(myData)
myPlotData <- myData[myData$Date == '01/02/2007' | myData$Date == '01/02/2007',]
head(myData)
myData[myData$Date == '01/02/2007',]
myData[myData$Date == '1/2/2007',]
myPlotData <- myData[myData$Date == '1/2/2007' | myData$Date == '2/2/2007',]
myPlotData$Date <- as.Date(myPlotData$Date, "%m/%d/%y")
summary(myPlotData)
head(myPlotData)
head(myData)
myData[myData$Date == '1/2/2007',]
test <- myData[myData$Date == '1/2/2007',]
head(test)
tail(test)
test <- myData[myData$Date == '2/2/2007',]
tail(test)
tail(test)
test <- myData[myData$Date == '2/2/2007' | myData$Date == '1/2/2007',]
head(test)
tail(test)
summary(test)
unique(test$Date)
test$Date <- as.Date(test$Date, "%m/%d/%y")
unique(test$Date)
test$Date <- as.Date(test$Date, "%y/%m/%d/")
test <- myData[myData$Date == '2/2/2007' | myData$Date == '1/2/2007',]
test$Date <- as.Date(test$Date, "%y/%m/%d/")
unique(test$Date)
test$Date <- as.Date(test$Date, "%m/%d/%Y")
test <- myData[myData$Date == '2/2/2007' | myData$Date == '1/2/2007',]
test$Date <- as.Date(test$Date, "%m/%d/%Y")
unique(test$Date)
test <- myData[myData$Date == '2/2/2007' | myData$Date == '1/2/2007',]
test$Date <- as.Date(test$Date, "%d/%m/%Y")
unique(test$Date)
myPlotData <- myData[myData$Date == '1/2/2007' | myData$Date == '2/2/2007',]
myPlotData$Date <- as.Date(myPlotData$Date,"%d/%m/%Y")
head(myPlotData)
myPlotData[, myPlotData$Global_intensity==?]
myPlotData[, myPlotData$Global_intensity=='?']
myPlotData[, myPlotData$Sub_metering_1=='?']
myPlotData[, myPlotData$Sub_metering_2=='?']
myPlotData[, myPlotData$Sub_metering_3=='?']
hist(myPlotData$Global_active_power)
head(myPlotData
)
?as.float
?as
?as.numeric
myPlotData$Global_active_power <- as.numeric(myPlotData$Global_active_power
)
hist(myPlotData$Global_active_power)
?hist
hist(myPlotData$Global_active_power,main="Global Active Power", col="red"
)
?hist
hist(myPlotData$Global_active_power,main="Global Active Power", col="red")
?hist
hist(myPlotData$Global_active_power,main="Global Active Power", col="red", xlab="Global Active Power (kilowatts")
png("plot1.png")
hist(myPlotData$Global_active_power,main="Global Active Power", col="red", xlab="Global Active Power (kilowatts)")
dev.off()
?png
?line
?lines
line(myPlotData$Global_active_power)
lines(myPlotData$Global_active_power)
lines(myPlotData$Global_active_power)
plot(myPlotData$Global_active_power)
myPlotData$Date <- as.POSIXct(myPlotData$Date,"%d/%m/%Y")
head(myPlotData)
myPlotData2 <- cbind(DateTime = '12', myPlotData)
head(myPlotData2)
myPlotData2 <- cbind(DateTime = as.POSIXct(paste(myPlotData$Date, myPlotDate$Time)), myPlotData)
myPlotData2 <- cbind(DateTime = as.POSIXct(paste(myPlotData$Date, myPlotData$Time)), myPlotData)
head(myPlotData2)
myPlotData <- myData[myData$Date == '1/2/2007' | myData$Date == '2/2/2007',]
myPlotData2 <- cbind(DateTime = as.POSIXct(paste(myPlotData$Date, myPlotDate$Time)), myPlotData)
myPlotData2 <- cbind(DateTime = as.POSIXct(paste(myPlotData$Date, myPlotData$Time)), myPlotData)
head(myPlotData2)
myPlotData2 <- cbind(DateTime = paste(myPlotData$Date, myPlotData$Time), myPlotData)
head(myPlotData2)
myPlotData2$DateTime <- as.POSIXct(myPlotData2$DateTime, format="%d/%m/%Y %H%M%S")
head(myPlotData2)
myPlotData2 <- cbind(DateTime = paste(myPlotData$Date, myPlotData$Time), myPlotData)
head(myPlotData2)
test <- as.POSIXct(myPlotData2$DateTime, format="%d/%m/%Y %H%M%S")
test
?as.POSIXct
test <- as.POSIXct(myPlotData2$DateTime, format="%d/%m/%Y %H:%M:%S")
test
myPlotData <- myData[myData$Date == '1/2/2007' | myData$Date == '2/2/2007',]
myPlotData <- <- cbind(DateTime = paste(myPlotData$Date, myPlotData$Time), myPlotData)
myPlotData <- cbind(DateTime = paste(myPlotData$Date, myPlotData$Time), myPlotData)
myPlotData$DateTime <- as.POSIXct(myPlotData$DateTime, format="%d/%m/%Y %H:%M:%S")
head(myPlotData)
test <-subset(myPlotData, select = -c('Date','Time') )
test <-subset(myPlotData, select = -c("Date","Time") )
test <-subset(myPlotData, select = -c(2,3) )
test
head(test)
head(myPlotData)
myPlotData <- subset(myPlotData, select = -c(2,3) )
head(myPlotData)
myPlotData$Global_active_power <- as.numeric(myPlotData$Global_active_power)
plot(myPlotData$Global_active_power, myPlotData$DateTime)
plot(myPlotData$DateTime, myPlotData$Global_active_power)
?plot
plot(myPlotData$DateTime, myPlotData$Global_active_power, type="l")
plot(myPlotData$DateTime, myPlotData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)")
plot(myPlotData$DateTime, myPlotData$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xlab="")
source("plot2.R")
head(myPlotData)
source("plot3.R")
myPlotData
head(myPlotData)
plot(myPlotData$DateTime, myPlotData$Sub_metering_1, type="l", ylab="Energy sub metering", xlab="")
plot(myPlotData$DateTime, myPlotData$Sub_metering_2, type="l", col="red", ylab="Energy sub metering", xlab="")
?plot
plot(myPlotData$DateTime, myPlotData$Sub_metering_1, type="l", ylab="Energy sub metering", xlab="")
lines(myPlotData$DateTime, myPlotData$Sub_metering_2, col="red")
lines(myPlotData$DateTime, myPlotData$Sub_metering_3, col="blue")
legend('topright', c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'))
legend('topright', c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), col=c('black', 'red', 'blue'), cex=.5)
legend('topright', c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), col=c('black', 'red', 'blue'), cex=1.5)
legend('topright', c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), col=c('black', 'red', 'blue'), cex=1)
legend('topright', c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), col=c('black', 'red', 'blue'), lty=1)
source("plot3.R")
source("plot3.R")
head(myPlotData)
myPlotData$Voltage <- as.numeric(myPlotData$Voltage)
source("plot4.R")
source("plot4.R")
plot(DateTime, Voltage, type="l", ylab="Voltage", xlab="datetime")
plot(myPlotData$DateTime, myPlotData$Voltage, type="l", ylab="Voltage", xlab="datetime")
with(myPlotData, {plot(DateTime, Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xlab="")
,plot(DateTime, Voltage, type="l", ylab="Voltage", xlab="datetime")
,plot(myPlotData$DateTime, myPlotData$Sub_metering_1, type="l", ylab="Energy sub metering", xlab="")
#add Sub_metering_2 as second line
lines(myPlotData$DateTime, myPlotData$Sub_metering_2, col="red")
#add Sub_metering_3 as third line
lines(myPlotData$DateTime, myPlotData$Sub_metering_3, col="blue")
#add legend
legend('topright', c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), col=c('black', 'red', 'blue'), lty=1),
plot(DateTime, Global_reactive_power, type="l", ylab="Global Active Power (kilowatts)", xlab="datetime")
})
source("plot4.R")
source("plot4.R")
source("plot4.R")
